; === INSTRUÇÕES ===
; === DEFINIÇÃO DE VARIÁVEIS ===

; Variáveis dos patches (espaço onde as formigas se movem)
patches-own [
  chemical             ;; quantidade de substância química neste patch
  food                 ;; quantidade de comida neste patch (0, 1 ou 2)
  nest?                ;; verdadeiro nos patches do ninho, falso em outros lugares
  nest-scent           ;; número que é maior perto do ninho
  food-source-number   ;; número (1, 2 ou 3) para identificar as fontes de comida
]

turtles-own[
  ninho
]

;;;;;;;;;;;;;;;;;;;;;;;;
;;; Setup procedures ;;;
;;;;;;;;;;;;;;;;;;;;;;;;

to setup
  clear-all
  set-default-shape turtles "bug"
  create-turtles population
  [ set size 2         ;; mais fácil de ver
    set color blue
  	ifelse who < population / 2 [
      move-to patch 0 0
      set ninho 1
  ] [
    move-to patch (0.6 * max-pxcor) (0.6 * max-pycor)
    set ninho 2
  ]
  ];; azul = não carregando comida
  setup-patches
  reset-ticks
end

to setup-patches
  ask patches
  [ setup-nest
    setup-food
    recolor-patch ]
  
  ;; Ajustando o cheiro para os dois ninhos
  
ask patches [
  ;; Ninho 1 no centro (0, 0)
  ifelse distancexy 0 0 < 5 [
    set nest-scent 200 - distancexy 0 0  ;; Defina a intensidade do cheiro do ninho
  ]
  [
    ;; Ninho 2 em (0.6 * max-pxcor, 0.6 * max-pycor)
    ifelse distancexy (0.6 * max-pxcor) (0.6 * max-pycor) < 5 [
      set nest-scent 200 - distancexy (0.6 * max-pxcor) (0.6 * max-pycor)  ;; Defina a intensidade do cheiro do ninho 2
    ]
    [ 
      set nest-scent 0  ;; Se não estiver perto de nenhum ninho, a intensidade do cheiro é 0
    ]
  ]
]
end

to setup-nest  ;; procedimento para configurar o ninho nos patches
  ;; Primeiro Ninho (já existente) - na posição (0, 0)
  set nest? (distancexy 0 0) < 5  ;; patches dentro de 5 unidades do centro são parte do primeiro ninho
  ;; Segundo Ninho - novo ninho em outra posição (exemplo: 60% da largura e 60% da altura)
  if (distancexy (0.6 * max-pxcor) (0.6 * max-pycor)) < 5 [
    set nest? true  ;; patches dentro de 5 unidades do novo centro são parte do segundo ninho
  ]
  ;; Definindo o cheiro do ninho (distância maior significa cheiro mais fraco)
  set nest-scent 200 - distancexy 0 0  ;; forte perto do primeiro ninho
  ;;adicionar um cheiro específico para o novo ninho, se quiser:
  if (distancexy (0.6 * max-pxcor) (0.6 * max-pycor)) < 5 [
    set nest-scent 200 - distancexy (0.6 * max-pxcor) (0.6 * max-pycor)  ;; cheiro do segundo ninho
  ]
end



to setup-food  ;; patch procedure
  ;; setup food source one on the right
  if (distancexy (0.6 * max-pxcor) 0) < 5
  [ set food-source-number 1 ]
  ;; setup food source two on the lower-left
  if (distancexy (-0.6 * max-pxcor) (-0.6 * max-pycor)) < 5
  [ set food-source-number 2 ]
  ;; setup food source three on the upper-left
  if (distancexy (-0.8 * max-pxcor) (0.8 * max-pycor)) < 5
  [ set food-source-number 3 ]
  ;; set "food" at sources to either 1 or 2, randomly
  if food-source-number > 0
  [ set food one-of [1 2] ]
end

to recolor-patch  ;; patch procedure
  ;; give color to nest and food sources
  ifelse nest?
  [ set pcolor violet ]
  [ ifelse food > 0
    [ if food-source-number = 1 [ set pcolor cyan ]
      if food-source-number = 2 [ set pcolor sky  ]
      if food-source-number = 3 [ set pcolor blue ] ]
    ;; scale color to show chemical concentration
    [ set pcolor scale-color orange chemical 0.1 5 ] ]
end

;;;;;;;;;;;;;;;;;;;;;
;;; Go procedures ;;;
;;;;;;;;;;;;;;;;;;;;;

to go  ;; forever button
  ask turtles
  [ if who >= ticks [ stop ] ;; delay initial departure
    ifelse color = blue
    [ look-for-food  ]       ;; not carrying food? look for it
    [ return-to-nest ]       ;; carrying food? take it back to nest
    wiggle
    fd 1 ]
  diffuse chemical (diffusion-rate / 100)
  ask patches
  [ set chemical chemical * (100 - evaporation-rate) / 100  ;; slowly evaporate chemical
    recolor-patch ]
  tick
end

to return-to-nest  ;; turtle procedure
  ifelse ninho = 1 [  ;; Se a formiga for do Ninho 1
    ifelse nest? [  ;; Se a formiga já chegou no ninho 1
      set color blue  ;; Altera a cor para azul (não está mais carregando comida)
      rt 180  ;; Vira 180 graus para sair e procurar mais comida
    ] [
      set chemical chemical + 60  ;; Deposita substância química
      uphill-nest-scent 1  ;; Segue para o Ninho 1
    ]
  ] [
    ifelse ninho = 2 [  ;; Se a formiga for do Ninho 2
      ifelse nest? [  ;; Se a formiga já chegou no ninho 2
        set color blue  ;; Altera a cor para azul
        rt 180  ;; Vira 180 graus
      ] [
        set chemical chemical + 60  ;; Deposita substância química
        uphill-nest-scent 2  ;; Segue para o Ninho 2
      ]
    ] [
      ;; Aqui você pode adicionar um comportamento caso a formiga não pertença a nenhum ninho (caso seja necessário)
    ]
  ]
end


to look-for-food  ;; turtle procedure
  if food > 0
  [ set color orange + 1     ;; pick up food
    set food food - 1        ;; and reduce the food source
    rt 180                   ;; and turn around
    stop ]
  ;; go in the direction where the chemical smell is strongest
  if (chemical >= 0.05) and (chemical < 2)
  [ uphill-chemical ]
end

;; sniff left and right, and go where the strongest smell is
to uphill-chemical  ;; turtle procedure
  let scent-ahead chemical-scent-at-angle   0
  let scent-right chemical-scent-at-angle  45
  let scent-left  chemical-scent-at-angle -45
  if (scent-right > scent-ahead) or (scent-left > scent-ahead)
  [ ifelse scent-right > scent-left
    [ rt 45 ]
    [ lt 45 ] ]
end

;; sniff left and right, and go where the strongest smell is
to uphill-nest-scent [ninho-alvo]  ;; turtle procedure
  if ninho-alvo = 1 [  ;; Se a formiga for do Ninho 1
    let scent-ahead nest-scent-at-angle 0
    let scent-right nest-scent-at-angle 45
    let scent-left nest-scent-at-angle -45
    if (scent-right > scent-ahead) or (scent-left > scent-ahead) [
      ifelse scent-right > scent-left [
        rt 45  ;; Vira para a direita
      ] [
        lt 45  ;; Vira para a esquerda
      ]
    ]
  ]
  if ninho-alvo = 2 [  ;; Se a formiga for do Ninho 2
    let scent-ahead nest-scent-at-angle 0
    let scent-right nest-scent-at-angle 45
    let scent-left nest-scent-at-angle -45
    if (scent-right > scent-ahead) or (scent-left > scent-ahead) [
      ifelse scent-right > scent-left [
        rt 45  ;; Vira para a direita
      ] [
        lt 45  ;; Vira para a esquerda
      ]
    ]
  ]
end



to wiggle  ;; turtle procedure
  rt random 40
  lt random 40
  if not can-move? 1 [ rt 180 ]
end

to-report nest-scent-at-angle [angle]
  let p patch-right-and-ahead angle 1
  if p = nobody [ report 0 ]
  report [nest-scent] of p
end

to-report chemical-scent-at-angle [angle]
  let p patch-right-and-ahead angle 1
  if p = nobody [ report 0 ]
  report [chemical] of p
end
